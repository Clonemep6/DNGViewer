{"version":3,"file":"public.cjs","sources":["../lib/publicShare.ts"],"sourcesContent":["/*!\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: GPL-3.0-or-later\n */\n\n/**\n * @module public\n */\n\nimport { loadState } from '@nextcloud/initial-state'\n\n/**\n * Check if the current page is on a public share\n */\nexport function isPublicShare(): boolean {\n\t// check both the new initial state version and fallback to legacy input\n\treturn (\n\t\tloadState<boolean | null>('files_sharing', 'isPublic', null)\n\t\t?? document.querySelector('input#isPublic[type=\"hidden\"][name=\"isPublic\"][value=\"1\"]') !== null\n\t)\n}\n\n/**\n * Get the sharing token for the current public share\n */\nexport function getSharingToken(): string | null {\n\treturn (\n\t\tloadState<string | null>('files_sharing', 'sharingToken', null)\n\t\t?? document.querySelector<HTMLInputElement>('input#sharingToken[type=\"hidden\"]')?.value\n\t\t?? null\n\t)\n}\n"],"names":["loadState"],"mappings":";;;AAAA;AAAA;AAAA;AAAA;AAcO,SAAS,gBAAyB;AAGvC,SAAAA,aAAA,UAA0B,iBAAiB,YAAY,IAAI,KACxD,SAAS,cAAc,2DAA2D,MAAM;AAE7F;AAKO,SAAS,kBAAiC;AAE/C,SAAAA,aAAA,UAAyB,iBAAiB,gBAAgB,IAAI,KAC3D,SAAS,cAAgC,mCAAmC,GAAG,SAC/E;AAEL;;;"}